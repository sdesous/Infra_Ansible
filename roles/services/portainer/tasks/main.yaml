# - name: "Create portainer user"
#   ansible.builtin.user:
#     name: "portainer"
#     comment: "portainer"
#     uid: "{{ uid }}"
#     create_home: false
#     password: '!'
#     shell: "/sbin/nologin"
#     groups: "podman"
#     append: yes

# - name: "Change portainer's home directory permissions"
#   file:
#     path: "/home/portainer"
#     owner: "portainer"
#     group: "portainer"
#     mode: '0770'
#     state: directory

- name: "Copy backups"
  ansible.posix.synchronize:
    src: "{{ backup_path }}"
    dest: "{{ path }}"
    recursive: true
  when: restore is truthy
  ignore_errors: true

- name: "Change permissions of restored directories"
  command: 'find {{ path }} -type d -exec chown portainer:portainer {} \; -exec chmod 0770 {} \;'
  when: restore is truthy
  ignore_errors: true

- name: "Change permissions of restored files"
  command: 'find {{ path }} -type f -exec chown portainer:portainer {} \; -exec chmod 0660 {} \;'
  when: restore is truthy
  ignore_errors: true

- name: "Create podman socket"
  file:
    path: "/var/run/podman/podman.sock"
    state: touch

- name: "Create portainer volume directory"
  file:
    path: "{{ item | split(':') | first }}"
    state: directory
    group: "portainer"
    owner: "portainer"
    recurse: yes
    mode: '0770'
  with_items: "{{ volumes }}"

- name: "Add user to subuid and subgid"
  import_tasks: subuid_or_subgid.yaml
  vars:
    username: "portainer"

- name: "Run podman system migrate"
  command: "podman system migrate"
  become: true
  become_user: "root"
  become_method: su
  become_flags: '-s /bin/ash'

- name: "Create portainer's pod"
  containers.podman.podman_pod:
    name: "portainer_pod"
    state: started
    ports: "{{ ports }}"
  become: true
  become_user: "root"
  become_method: su
  become_flags: '-s /bin/ash'

- name: "Run portainer's container"
  containers.podman.podman_container:
    pod: "portainer_pod"
    image: "{{ link }}"
    name: "portainer"
    state: started
    sig_proxy: false
    detach: yes
    restart: true
    volume: "{{ volumes + ['/var/run/podman/podman.sock:/var/run/docker.sock'] }}"
    restart_policy: always
  become: true
  become_user: "root"
  become_method: su
  become_flags: '-s /bin/ash'

- name: "Create portainer yaml file"
  ansible.builtin.shell : "podman generate kube portainer_pod > {{ path }}/portainer_kubefile.yaml" 
  become: true
  become_user: "root"
  become_method: su
  become_flags: '-s /bin/ash'

- name: "Rename the pod correctly in the yaml file"
  ansible.builtin.replace:
    path: "{{ path }}/portainer_kubefile.yaml"
    regexp: 'portainerpod'
    replace: "portainer_pod"

- name: "Change portainer's yaml file permissions"
  file:
    path: "{{ path }}/portainer_kubefile.yaml"
    owner: root
    group: "portainer"
    mode: '0664'
    state: file

- name: "Create pod file for init.d"
  ansible.builtin.copy:
    dest: "/root/pods/portainer_service"
    src: "{{ playbook_dir }}/resources/pod_template"
    owner: root
    group: root
    mode: '0770'

- name: "Update portainer_service file"
  ansible.builtin.replace:
    path: "/root/pods/portainer_service"
    regexp: "{{ item.0 }}"
    replace: "{{ item.1 }}"
  with_together:
    - ['\$user','\$volume_path','\$pod_name']
    - ["portainer","{{ path }}","portainer_pod"]

- name: "Create portainer symlink"
  file:
    src: "/root/pods/portainer_service"
    dest: "/etc/init.d/portainer"
    state: link

- name: "Add portainer to init boot"
  command: "{{ item }}"
  with_items:
    - "rc-update add portainer boot"